// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/product/product.proto

package steaks_product_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_14fbc13de7c38f78, []int{0}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

type Product struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StorageId            int32    `protobuf:"varint,4,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_14fbc13de7c38f78, []int{1}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetStorageId() int32 {
	if m != nil {
		return m.StorageId
	}
	return 0
}

type Response struct {
	Created              bool       `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Product              *Product   `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	Products             []*Product `protobuf:"bytes,3,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_14fbc13de7c38f78, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func (m *Response) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *Response) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "steaks.product.service.GetRequest")
	proto.RegisterType((*Product)(nil), "steaks.product.service.Product")
	proto.RegisterType((*Response)(nil), "steaks.product.service.Response")
}

func init() { proto.RegisterFile("proto/product/product.proto", fileDescriptor_14fbc13de7c38f78) }

var fileDescriptor_14fbc13de7c38f78 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0xb1, 0x4e, 0xec, 0x30,
	0x10, 0x7c, 0x49, 0xee, 0x91, 0xdc, 0x06, 0xae, 0xd8, 0x02, 0x59, 0x20, 0x44, 0xe4, 0xea, 0xaa,
	0x20, 0x1d, 0x15, 0xa2, 0xa4, 0x38, 0xd1, 0x21, 0x03, 0x35, 0x0a, 0xf1, 0x0a, 0x59, 0x88, 0x38,
	0x78, 0x7d, 0x7c, 0x0d, 0xbf, 0xc2, 0xbf, 0x21, 0x39, 0x36, 0x50, 0x70, 0xe2, 0x2a, 0xaf, 0xc7,
	0x33, 0xb3, 0xb3, 0x5e, 0x38, 0x1e, 0x9d, 0xf5, 0xf6, 0x6c, 0x74, 0x56, 0x6f, 0x7a, 0x9f, 0xce,
	0x36, 0xa0, 0x78, 0xc8, 0x9e, 0xba, 0x67, 0x6e, 0x13, 0xca, 0xe4, 0xde, 0x4c, 0x4f, 0x72, 0x1f,
	0x60, 0x4d, 0x5e, 0xd1, 0xeb, 0x86, 0xd8, 0xcb, 0x01, 0xca, 0x9b, 0x89, 0x80, 0x0b, 0xc8, 0x8d,
	0x16, 0x59, 0x93, 0x2d, 0xff, 0xab, 0xdc, 0x68, 0x44, 0x98, 0x0d, 0xdd, 0x0b, 0x89, 0xbc, 0xc9,
	0x96, 0x73, 0x15, 0x6a, 0x6c, 0xa0, 0xd6, 0xc4, 0xbd, 0x33, 0xa3, 0x37, 0x76, 0x10, 0x45, 0x78,
	0xfa, 0x09, 0xe1, 0x09, 0x00, 0x7b, 0xeb, 0xba, 0x27, 0x7a, 0x30, 0x5a, 0xcc, 0x82, 0xdb, 0x3c,
	0x22, 0xd7, 0x5a, 0xbe, 0x67, 0x50, 0x29, 0xe2, 0xd1, 0x0e, 0x4c, 0x28, 0xa0, 0xec, 0x1d, 0x75,
	0x9e, 0xa6, 0xb6, 0x95, 0x4a, 0x57, 0xbc, 0x80, 0x32, 0xe6, 0x0e, 0xed, 0xeb, 0xd5, 0x69, 0xfb,
	0xfb, 0x38, 0x6d, 0x4c, 0xaf, 0x12, 0x1f, 0x2f, 0xa1, 0x8a, 0x25, 0x8b, 0xa2, 0x29, 0x76, 0xd1,
	0x7e, 0x09, 0x56, 0x1f, 0x19, 0x2c, 0x22, 0x7a, 0x3b, 0x91, 0xf0, 0x0e, 0x0e, 0xae, 0x42, 0xaa,
	0xf4, 0x4f, 0x7f, 0xd9, 0x1d, 0x35, 0xdb, 0x08, 0x69, 0x70, 0xf9, 0x0f, 0xef, 0xa1, 0x5e, 0x93,
	0x8f, 0x0a, 0x46, 0xb9, 0x4d, 0xf2, 0xbd, 0xaa, 0x5d, 0x6c, 0x1f, 0xf7, 0xc2, 0xee, 0xcf, 0x3f,
	0x03, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x43, 0xe0, 0x79, 0x1a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ProductService service

type ProductServiceClient interface {
	CreateProduct(ctx context.Context, in *Product, opts ...client.CallOption) (*Response, error)
	GetProducts(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error)
}

type productServiceClient struct {
	c           client.Client
	serviceName string
}

func NewProductServiceClient(serviceName string, c client.Client) ProductServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "steaks.product.service"
	}
	return &productServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *productServiceClient) CreateProduct(ctx context.Context, in *Product, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ProductService.CreateProduct", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productServiceClient) GetProducts(ctx context.Context, in *GetRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ProductService.GetProducts", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProductService service

type ProductServiceHandler interface {
	CreateProduct(context.Context, *Product, *Response) error
	GetProducts(context.Context, *GetRequest, *Response) error
}

func RegisterProductServiceHandler(s server.Server, hdlr ProductServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ProductService{hdlr}, opts...))
}

type ProductService struct {
	ProductServiceHandler
}

func (h *ProductService) CreateProduct(ctx context.Context, in *Product, out *Response) error {
	return h.ProductServiceHandler.CreateProduct(ctx, in, out)
}

func (h *ProductService) GetProducts(ctx context.Context, in *GetRequest, out *Response) error {
	return h.ProductServiceHandler.GetProducts(ctx, in, out)
}
